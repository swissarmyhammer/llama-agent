[workspace]
members = [
    "llama-agent",
    "llama-agent-cli",
]
resolver = "2"

[workspace.dependencies]
# Core inference
llama-cpp-2 = "0.1.109"

# MCP integration  
rmcp = { version = "0.4.0", features = ["transport-io"] }

# Async runtime
tokio = { version = "1.0", features = ["full"] }
tokio-stream = "0.1"
tokio-util = "0.7"

# CLI
clap = { version = "4.0", features = ["derive"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Utilities
ulid = { version = "1.0", features = ["serde"] }
tracing = "0.1"
tracing-subscriber = "0.3"
regex = "1.0"

# Async traits
async-trait = "0.1"

# Futures
futures = "0.3"

# Test dependencies
tempfile = "3.0"
proptest = "1.0"
mockall = "0.12"

# Workspace-level package for integration tests
[package]
name = "llama-agent-workspace"
version = "0.1.0"
edition = "2021"

[dependencies]
llama-agent = { path = "llama-agent" }
tokio = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
futures = { workspace = true }
tokio-stream = { workspace = true }
serde_json = { workspace = true }

[dev-dependencies]
tempfile = { workspace = true }
proptest = { workspace = true }
mockall = { workspace = true }
ulid = { workspace = true }

# Examples
[[example]]
name = "basic_usage"
path = "examples/basic_usage.rs"

[[example]]
name = "tool_workflow"
path = "examples/tool_workflow.rs"

[[example]]
name = "streaming"
path = "examples/streaming.rs"

[[example]]
name = "mcp_integration"
path = "examples/mcp_integration.rs"

[[example]]
name = "error_handling"
path = "examples/error_handling.rs"

[[example]]
name = "performance_examples"
path = "examples/performance_examples.rs"

[[example]]
name = "integration_tests"
path = "examples/integration_tests.rs"